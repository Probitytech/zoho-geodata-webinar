/*******************************************************************************************
* 									Static Map Widget
* 			        https://docs.mapbox.com/api/maps/static-images/
*
*			this code generates map 1200x350 for retina screed (double density)
*			validate distance in the loop and put the points within the range on map
*           and draw circle with given radius
* 			
*/
url = "";
if(ifnull(record_id,"") != "")
{
	// calculate distance in meters
	dist = floor(ifnull(distance,"20").toLong() * 1609.0);
	// get center of map
	rec = Visit[ID == input.record_id.toLong()];
	center = Apartment[ID == rec.Apartment];
	//
	// define the list of map objects
	overlay = List();
	//
	// get the square boundaries from center with specified distance
	br = thisapp.geo.square_bounds(center.latitude1,center.longitude1,dist);
	//
	// Generate the points for the corners
	SW = br.get("longmin") + "," + br.get("latmax");
	NW = br.get("longmin") + "," + br.get("latmin");
	NE = br.get("longmax") + "," + br.get("latmin");
	SE = br.get("longmax") + "," + br.get("latmax");
	//
	//Generate the points for the square
	ls = {"[" + SW + "]","[" + NW + "]","[" + NE + "]","[" + SE + "]","[" + SW + "]"};
	overlay.add(thisapp.mapbox.polygon_json(ls.toString(),"#084B8A",0.2));
	//
	//Generate the points for the circle
	ls = thisapp.geo.circle(center.latitude1,center.longitude1,dist,60);
	overlay.add(thisapp.mapbox.polygon_json(ls.toString(),"#FA5858",0.3));
	//
	// filter apartments using  square boundaries 
	points = Apartment[latitude1 >= br.get("latmin") && latitude1 <= br.get("latmax") && longitude1 >= br.get("longmin") && longitude1 <= br.get("longmax")] range from 1 to 200;
	for each  point in points
	{
		//calculate the range for each point
		range = thisapp.geo.distance(center.latitude1,center.longitude1,point.latitude1,point.longitude1);
		if(range < dist && point.ID != center.ID)
		{
			// put on map only validated points
			overlay.add("pin-s-circle+0B4C5F(" + point.longitude1 + "," + point.latitude1 + ")");
		}
	}
	//
	// put the center point on map
	center_lnglat = center.longitude1 + "," + center.latitude1;
	overlay.add("pin-s-circle+B40404(" + center_lnglat + ")");
	//
	// calculate the scale of map depends on distance
	SCALE = {"200":"5.2","100":"6.1","50":"7.1","20":"8.4","10":"9.4","5":"10.5"};
	//
	// generate the url for map preview using mapbox API
	url = "https://api.mapbox.com/styles/v1/vatsenko/ckivvxiop289p19o7t789m3zk/static/" + overlay + "/" + center_lnglat + "," + SCALE.get(distance) + ",0,50/1200x350@2x?access_token=" + thisapp.mapbox.token();
}