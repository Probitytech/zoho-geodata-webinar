list geo.circle(float lat1, float lon1, int Distance, int vertices_num)
{
	/*******************************************************************************************
    * 				
    *       Draw regular poligon 
	*		Center - lat1, lon1
	* 		Radius - Distance
	* 		Number of corners - vertices_num
	* 		for the circle - we use 36+ points (depends on radius)
	* 		NOTE: This function returns array of arrays with longitude on first place and latitude on second
	* 		for google and others api - change the order of params
	*/
	points = List:Map();
	step = 360 / vertices_num;
	counter = leftpad("1",vertices_num).replaceAll(" ","0,").toList();
	circle = List();
	for each index i in counter
	{
		angle = i * step;
		dest = thisapp.geo.bearing(lat1,lon1,angle,Distance);
		circle.add("[" + dest.get("long") + "," + dest.get("lat") + "]");
	}
	start_point = circle.get(0);
	circle.add(start_point);
	return circle;
}